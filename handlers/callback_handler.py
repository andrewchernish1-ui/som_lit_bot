"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–±—ç–∫-–∑–∞–ø—Ä–æ—Å–æ–≤ (inline –∫–Ω–æ–ø–æ–∫)"""
from telegram import Update
from telegram.ext import ContextTypes
import logging
from keyboards import get_main_menu_keyboard

logger = logging.getLogger(__name__)

async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–±—ç–∫-–∑–∞–ø—Ä–æ—Å—ã –æ—Ç inline –∫–Ω–æ–ø–æ–∫"""
    query = update.callback_query
    await query.answer()

    callback_data = query.data

    if callback_data == "show_menu":
        # –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        from keyboards import get_main_menu_keyboard
        await query.message.reply_text(
            "üìã –í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:",
            reply_markup=get_main_menu_keyboard()
        )
    elif callback_data.startswith("add_word_"):
        # –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ –≤ —Å–ª–æ–≤–∞—Ä—å (–∑–∞–≥–ª—É—à–∫–∞)
        word = callback_data.replace("add_word_", "")
        await query.message.reply_text(f"üìö –°–ª–æ–≤–æ '{word}' –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–ª–æ–≤–∞—Ä—å!")
    elif callback_data == "rate_response":
        # –û—Ü–µ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç (–∑–∞–≥–ª—É—à–∫–∞)
        await query.message.reply_text("‚≠ê –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É!")
    elif callback_data == "explain_again":
        # –û–±—ä—è—Å–Ω–∏—Ç—å –∏–Ω–∞—á–µ (–∑–∞–≥–ª—É—à–∫–∞)
        await query.message.reply_text("üîÑ –ü–æ–ø—Ä–æ–±—É–µ–º –æ–±—ä—è—Å–Ω–∏—Ç—å –∏–Ω–∞—á–µ...")
    elif callback_data == "ask_question":
        # –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å (–∑–∞–≥–ª—É—à–∫–∞)
        await query.message.reply_text("‚ùì –ó–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å:")
    else:
        # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–æ–ª–±—ç–∫
        logger.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–æ–ª–±—ç–∫: {callback_data}")
