"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è —Å–ª–æ–≤"""
from telegram import Update
from telegram.ext import ContextTypes
import logging
from literary_data import get_word_definition, format_word_response
from gemini_service import generate_word_explanation
from database import save_word

logger = logging.getLogger(__name__)

async def explain_word(update: Update, context: ContextTypes.DEFAULT_TYPE, word: str) -> None:
    """
    –û–±—ä—è—Å–Ω–∏—Ç—å —Å–ª–æ–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

    Args:
        update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
        word (str): –°–ª–æ–≤–æ –¥–ª—è –æ–±—ä—è—Å–Ω–µ–Ω–∏—è
    """
    user_id = update.effective_user.id

    try:
        # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –≤ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –±–∞–∑–µ
        word_data = get_word_definition(word)

        if word_data:
            # –°–ª–æ–≤–æ –Ω–∞–π–¥–µ–Ω–æ –≤ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –±–∞–∑–µ
            response = format_word_response(word_data)
            explanation = word_data['definition']
        else:
            # –°–ª–æ–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º Gemini API
            explanation = generate_word_explanation(word)

            if explanation:
                response = f"ü§ñ –ò–ò-–≥–µ–Ω–µ—Ä–∞—Ü–∏—è:\n\n{explanation}"
            else:
                response = (
                    f"‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ —Å–º–æ–≥ –æ–±—ä—è—Å–Ω–∏—Ç—å —Å–ª–æ–≤–æ '{word}'.\n\n"
                    "–í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –æ–ø–µ—á–∞—Ç–∫–∞ –∏–ª–∏ –æ—á–µ–Ω—å —Ä–µ–¥–∫–æ–µ —Å–ª–æ–≤–æ. "
                    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–µ —Å–ª–æ–≤–æ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /–æ–±—ä—è—Å–Ω–∏ –¥–ª—è —Ñ—Ä–∞–∑."
                )
                await update.message.reply_text(response)
                return

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await update.message.reply_text(response)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ª–æ–≤–æ –≤ –ª–∏—á–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —É–¥–∞–ª–æ—Å—å)
        if explanation:
            save_word(user_id, word, explanation)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏–∏ —Å–ª–æ–≤–∞ '{word}': {e}")
        await update.message.reply_text(
            f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏–∏ —Å–ª–æ–≤–∞ '{word}'. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
