"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Å–∫–∞–∑—ã–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º —è–∑—ã–∫–æ–º"""
from telegram import Update
from telegram.ext import ContextTypes
import logging
from llm_service import generate_text_retelling, initialize_llm_service
from keyboards import get_response_actions_keyboard

logger = logging.getLogger(__name__)

async def retell_text(update: Update, context: ContextTypes.DEFAULT_TYPE, text: str) -> None:
    """
    –ü–µ—Ä–µ—Å–∫–∞–∑–∞—Ç—å —Ç–µ–∫—Å—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º —è–∑—ã–∫–æ–º

    Args:
        update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
        text (str): –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ—Å–∫–∞–∑—ã–≤–∞–Ω–∏—è
    """
    user_id = update.effective_user.id

    try:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª –ø–µ—Ä–µ—Å–∫–∞–∑ —Ç–µ–∫—Å—Ç–∞ (–¥–ª–∏–Ω–∞: {len(text)} —Å–∏–º–≤–æ–ª–æ–≤)")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
        if len(text) > 5000:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª—è API
            logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ—Å–∫–∞–∑—ã–≤–∞–Ω–∏—è: {len(text)} —Å–∏–º–≤–æ–ª–æ–≤")
            await update.message.reply_text(
                "‚ùå –¢–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (–±–æ–ª–µ–µ 5000 —Å–∏–º–≤–æ–ª–æ–≤).\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–∏–π –æ—Ç—Ä—ã–≤–æ–∫ –¥–ª—è –ø–µ—Ä–µ—Å–∫–∞–∑—ã–≤–∞–Ω–∏—è."
            )
            return

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ (–¥–ª—è –±–æ–ª—å—à–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤)
        if len(text) > 500:
            logger.info(f"–¢–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –¥–ª–∏–Ω–Ω—ã–π, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–±—Ä–∞–±–æ—Ç–∫–µ")
            processing_msg = await update.message.reply_text("üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ç–µ–∫—Å—Ç...")

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä–µ—Å–∫–∞–∑
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –≤ LLM API –¥–ª—è –ø–µ—Ä–µ—Å–∫–∞–∑—ã–≤–∞–Ω–∏—è")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º LLM —Å–µ—Ä–≤–∏—Å
        if not initialize_llm_service():
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å LLM —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø–µ—Ä–µ—Å–∫–∞–∑—ã–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞")
            await update.message.reply_text(
                "‚ùå –°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )
            return

        retelling = generate_text_retelling(text)

        if retelling:
            response = f"üìù –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Å–∫–∞–∑:\n\n{retelling}"
            logger.info(f"LLM API —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–Ω—É–ª –ø–µ—Ä–µ—Å–∫–∞–∑ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} (–¥–ª–∏–Ω–∞: {len(retelling)} —Å–∏–º–≤–æ–ª–æ–≤)")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –æ—Ç–≤–µ—Ç–∞
            max_length = 4000
            if len(response) > max_length:
                logger.warning(f"–ü–µ—Ä–µ—Å–∫–∞–∑ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π, –æ–±—Ä–µ–∑–∞–µ–º –¥–æ {max_length} —Å–∏–º–≤–æ–ª–æ–≤")
                response = response[:max_length-100] + "\n\n... [–ü–µ—Ä–µ—Å–∫–∞–∑ –æ–±—Ä–µ–∑–∞–Ω –∏–∑-–∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π Telegram]"
        else:
            logger.error(f"LLM API –Ω–µ —Å–º–æ–≥ –ø–µ—Ä–µ—Å–∫–∞–∑–∞—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            response = (
                "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–∫–∞–∑–∞—Ç—å —Ç–µ–∫—Å—Ç.\n\n"
                "–í–æ–∑–º–æ–∂–Ω–æ, —Ç–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω—ã–π –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–∏–º–≤–æ–ª—ã. "
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–∏–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π –æ—Ç—Ä—ã–≤–æ–∫."
            )

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ
        if len(text) > 500 and 'processing_msg' in locals():
            try:
                await processing_msg.delete()
                logger.info(f"–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            except Exception as e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")

        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–µ—Å–∫–∞–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        await update.message.reply_text(
            response,
            reply_markup=get_response_actions_keyboard()
        )

        logger.info(f"–£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–µ—Ä–µ—Å–∫–∞–∑ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")

    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–∫–∞–∑—ã–≤–∞–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}", exc_info=True)
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–∫–∞–∑—ã–≤–∞–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–π —Ç–µ–∫—Å—Ç."
        )
