"""–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –º–µ–Ω—é –¥–ª—è –±–æ—Ç–∞"""
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup

def get_main_menu_keyboard() -> ReplyKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π"""
    keyboard = [
        ["1Ô∏è‚É£ –û–±—ä—è—Å–Ω–∏—Ç—å —Å–ª–æ–≤–æ"],
        ["2Ô∏è‚É£ –†–∞–∑–æ–±—Ä–∞—Ç—å —Ñ—Ä–∞–∑—É/–∞–±–∑–∞—Ü"],
        ["3Ô∏è‚É£ –ü–µ—Ä–µ—Å–∫–∞–∑–∞—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º —è–∑—ã–∫–æ–º"],
        ["4Ô∏è‚É£ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –≥–µ—Ä–æ—è"]
    ]

    return ReplyKeyboardMarkup(
        keyboard,
        resize_keyboard=True,
        one_time_keyboard=False
    )

def get_quiz_keyboard(question: str, options: list, correct_index: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤"""
    keyboard = []

    for i, option in enumerate(options):
        callback_data = f"quiz_{i}_{correct_index}"
        keyboard.append([InlineKeyboardButton(option, callback_data=callback_data)])

    return InlineKeyboardMarkup(keyboard)

def get_dictionary_actions_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–µ–π—Å—Ç–≤–∏–π —Å–æ —Å–ª–æ–≤–∞—Ä–µ–º"""
    keyboard = [
        [InlineKeyboardButton("üìÑ –≠–∫—Å–ø–æ—Ä—Ç –≤ PDF", callback_data="dict_export_pdf")],
        [InlineKeyboardButton("üìä –≠–∫—Å–ø–æ—Ä—Ç –≤ —Ç–∞–±–ª–∏—Ü—É", callback_data="dict_export_csv")],
        [InlineKeyboardButton("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Å–ª–æ–≤–∞—Ä—å", callback_data="dict_clear")]
    ]

    return InlineKeyboardMarkup(keyboard)

def get_response_actions_keyboard(word: str = None) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞"""
    keyboard = []

    if word:
        keyboard.append([
            InlineKeyboardButton("üìö –î–æ–±–∞–≤–∏—Ç—å –≤ —Å–ª–æ–≤–∞—Ä—å", callback_data=f"add_word_{word}"),
            InlineKeyboardButton("‚≠ê –û—Ü–µ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç", callback_data="rate_response")
        ])

    keyboard.append([
        InlineKeyboardButton("üîÑ –û–±—ä—è—Å–Ω–∏—Ç—å –∏–Ω–∞—á–µ", callback_data="explain_again"),
        InlineKeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="ask_question")
    ])

    return InlineKeyboardMarkup(keyboard)

def get_popular_terms_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–º–∏ —Ç–µ—Ä–º–∏–Ω–∞–º–∏"""
    terms = [
        ["–º–µ—Ç–∞—Ñ–æ—Ä–∞", "–º–µ—Ç–æ–Ω–∏–º–∏—è"],
        ["–∏—Ä–æ–Ω–∏—è", "–≥–∏–ø–µ—Ä–±–æ–ª–∞"],
        ["–∞–Ω–∞–ª–æ–≥–∏—è", "–∞–ª–ª–µ–≥–æ—Ä–∏—è"],
        ["üìñ –î—Ä—É–≥–∏–µ —Ç–µ—Ä–º–∏–Ω—ã", "üé≠ –ü–æ—Å–ª–æ–≤–∏—Ü—ã"]
    ]

    keyboard = []
    for row in terms:
        keyboard_row = []
        for term in row:
            if "üìñ" in term or "üé≠" in term:
                keyboard_row.append(InlineKeyboardButton(term, callback_data=f"category_{term.replace('üìñ ', '').replace('üé≠ ', '').lower()}"))
            else:
                keyboard_row.append(InlineKeyboardButton(term, callback_data=f"term_{term}"))
        keyboard.append(keyboard_row)

    return InlineKeyboardMarkup(keyboard)
