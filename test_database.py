#!/usr/bin/env python3
"""–¢–µ—Å—Ç –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""

from literary_data import get_word_definition, LITERARY_TERMS

def test_database():
    """–¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("–¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")

    # –¢–µ—Å—Ç –Ω–∞–ª–∏—á–∏—è —Å–ª–æ–≤–∞ "–ø–æ–º–µ—â–∏–∫"
    result = get_word_definition("–ø–æ–º–µ—â–∏–∫")
    if result:
        print("‚úÖ '–ø–æ–º–µ—â–∏–∫' –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ:")
        print(f"   –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: {result['definition']}")
        print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {result['category']}")
    else:
        print("‚ùå '–ø–æ–º–µ—â–∏–∫' –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ")

    # –¢–µ—Å—Ç –Ω–∞–ª–∏—á–∏—è —Å–ª–æ–≤–∞ "–±—É–¥–∏"
    result2 = get_word_definition("–±—É–¥–∏")
    if result2:
        print("‚úÖ '–±—É–¥–∏' –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ:")
        print(f"   –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: {result2['definition']}")
    else:
        print("‚ùå '–±—É–¥–∏' –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ")

    # –í—ã–≤–æ–¥ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ–≤
    total_words = len(LITERARY_TERMS)
    print(f"\nüìö –í—Å–µ–≥–æ —Å–ª–æ–≤ –≤ –±–∞–∑–µ: {total_words}")

    # –í—ã–≤–æ–¥ –ø–µ—Ä–≤—ã—Ö 5 —Å–ª–æ–≤
    print("üìù –ü–µ—Ä–≤—ã–µ 5 —Å–ª–æ–≤ –≤ –±–∞–∑–µ:")
    for i, word in enumerate(list(LITERARY_TERMS.keys())[:5]):
        print(f"   {i+1}. {word}")

if __name__ == "__main__":
    test_database()
